name: Java CI with Gradle

on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: ./build/libs/
  gametest:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Gametest with Gradle
        run: ./gradlew runGametest
  webhook:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [ build, gametest ]
    continue-on-error: true
    steps:
      - name: Success
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ needs.build.outputs.status }} == success && ${{ needs.gametest.outputs.status }} == success
        with:
          severity: info
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Failure
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ needs.build.outputs.status }} == failure || ${{ needs.gametest.outputs.status }} == failure
        with:
          severity: info
          details: 'Build: ${{ needs.build.outputs.status }}
                    Gametest: ${{ needs.gametest.outputs.status }}'
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
  tag:
    runs-on: ubuntu-latest
    needs: [ build, gametest ]
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: Get release version
        uses: christian-draeger/read-properties@1.0.1
        id: version
        with:
          path: gradle.properties
          property: sarVersion
      - name: Create tag
        uses: actions/github-script@v5
        if: ${{ success() && github.ref == 'refs/heads/master' }}
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ steps.version.outputs.value }}',
              sha: context.sha
            })
